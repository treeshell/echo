/*
 * This file is generated by jOOQ.
 */
package cn.treeshell.echo.model.entity.tables.records;


import cn.treeshell.echo.model.entity.tables.Comment;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 评论表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentRecord extends UpdatableRecordImpl<CommentRecord> implements Record10<Integer, String, Integer, Integer, Integer, Integer, Byte, Byte, Timestamp, Timestamp> {

    private static final long serialVersionUID = -1864829513;

    /**
     * Setter for <code>echo.comment.id</code>. id
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>echo.comment.id</code>. id
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>echo.comment.content</code>. 评论内容
     */
    public void setContent(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>echo.comment.content</code>. 评论内容
     */
    public String getContent() {
        return (String) get(1);
    }

    /**
     * Setter for <code>echo.comment.parent_id</code>. 评论父节点id
     */
    public void setParentId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>echo.comment.parent_id</code>. 评论父节点id
     */
    public Integer getParentId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>echo.comment.article_id</code>. 评论文章id
     */
    public void setArticleId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>echo.comment.article_id</code>. 评论文章id
     */
    public Integer getArticleId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>echo.comment.user_id</code>. 评论用户id
     */
    public void setUserId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>echo.comment.user_id</code>. 评论用户id
     */
    public Integer getUserId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>echo.comment.answerer_id</code>. 回答评论用户id
     */
    public void setAnswererId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>echo.comment.answerer_id</code>. 回答评论用户id
     */
    public Integer getAnswererId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>echo.comment.status</code>. 0：待审核，1：审核通过
     */
    public void setStatus(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>echo.comment.status</code>. 0：待审核，1：审核通过
     */
    public Byte getStatus() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>echo.comment.active</code>. 0：未删除，1：已删除
     */
    public void setActive(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>echo.comment.active</code>. 0：未删除，1：已删除
     */
    public Byte getActive() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>echo.comment.create_time</code>. 创建日期
     */
    public void setCreateTime(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>echo.comment.create_time</code>. 创建日期
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>echo.comment.update_time</code>. 修改日期
     */
    public void setUpdateTime(Timestamp value) {
        set(9, value);
    }

    /**
     * Getter for <code>echo.comment.update_time</code>. 修改日期
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, Integer, Integer, Integer, Integer, Byte, Byte, Timestamp, Timestamp> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, String, Integer, Integer, Integer, Integer, Byte, Byte, Timestamp, Timestamp> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Comment.COMMENT.ID;
    }

    @Override
    public Field<String> field2() {
        return Comment.COMMENT.CONTENT;
    }

    @Override
    public Field<Integer> field3() {
        return Comment.COMMENT.PARENT_ID;
    }

    @Override
    public Field<Integer> field4() {
        return Comment.COMMENT.ARTICLE_ID;
    }

    @Override
    public Field<Integer> field5() {
        return Comment.COMMENT.USER_ID;
    }

    @Override
    public Field<Integer> field6() {
        return Comment.COMMENT.ANSWERER_ID;
    }

    @Override
    public Field<Byte> field7() {
        return Comment.COMMENT.STATUS;
    }

    @Override
    public Field<Byte> field8() {
        return Comment.COMMENT.ACTIVE;
    }

    @Override
    public Field<Timestamp> field9() {
        return Comment.COMMENT.CREATE_TIME;
    }

    @Override
    public Field<Timestamp> field10() {
        return Comment.COMMENT.UPDATE_TIME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getContent();
    }

    @Override
    public Integer component3() {
        return getParentId();
    }

    @Override
    public Integer component4() {
        return getArticleId();
    }

    @Override
    public Integer component5() {
        return getUserId();
    }

    @Override
    public Integer component6() {
        return getAnswererId();
    }

    @Override
    public Byte component7() {
        return getStatus();
    }

    @Override
    public Byte component8() {
        return getActive();
    }

    @Override
    public Timestamp component9() {
        return getCreateTime();
    }

    @Override
    public Timestamp component10() {
        return getUpdateTime();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getContent();
    }

    @Override
    public Integer value3() {
        return getParentId();
    }

    @Override
    public Integer value4() {
        return getArticleId();
    }

    @Override
    public Integer value5() {
        return getUserId();
    }

    @Override
    public Integer value6() {
        return getAnswererId();
    }

    @Override
    public Byte value7() {
        return getStatus();
    }

    @Override
    public Byte value8() {
        return getActive();
    }

    @Override
    public Timestamp value9() {
        return getCreateTime();
    }

    @Override
    public Timestamp value10() {
        return getUpdateTime();
    }

    @Override
    public CommentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public CommentRecord value2(String value) {
        setContent(value);
        return this;
    }

    @Override
    public CommentRecord value3(Integer value) {
        setParentId(value);
        return this;
    }

    @Override
    public CommentRecord value4(Integer value) {
        setArticleId(value);
        return this;
    }

    @Override
    public CommentRecord value5(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public CommentRecord value6(Integer value) {
        setAnswererId(value);
        return this;
    }

    @Override
    public CommentRecord value7(Byte value) {
        setStatus(value);
        return this;
    }

    @Override
    public CommentRecord value8(Byte value) {
        setActive(value);
        return this;
    }

    @Override
    public CommentRecord value9(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public CommentRecord value10(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public CommentRecord values(Integer value1, String value2, Integer value3, Integer value4, Integer value5, Integer value6, Byte value7, Byte value8, Timestamp value9, Timestamp value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentRecord
     */
    public CommentRecord() {
        super(Comment.COMMENT);
    }

    /**
     * Create a detached, initialised CommentRecord
     */
    public CommentRecord(Integer id, String content, Integer parentId, Integer articleId, Integer userId, Integer answererId, Byte status, Byte active, Timestamp createTime, Timestamp updateTime) {
        super(Comment.COMMENT);

        set(0, id);
        set(1, content);
        set(2, parentId);
        set(3, articleId);
        set(4, userId);
        set(5, answererId);
        set(6, status);
        set(7, active);
        set(8, createTime);
        set(9, updateTime);
    }
}
