/*
 * This file is generated by jOOQ.
 */
package cn.treeshell.echo.model.entity.tables.records;


import cn.treeshell.echo.model.entity.tables.User;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 用户表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record14<Integer, String, String, String, String, String, String, String, Byte, Byte, Byte, Timestamp, Timestamp, Timestamp> {

    private static final long serialVersionUID = -1234842863;

    /**
     * Setter for <code>echo.user.id</code>. id
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>echo.user.id</code>. id
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>echo.user.mobile</code>. 电话
     */
    public void setMobile(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>echo.user.mobile</code>. 电话
     */
    public String getMobile() {
        return (String) get(1);
    }

    /**
     * Setter for <code>echo.user.username</code>. 用户名
     */
    public void setUsername(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>echo.user.username</code>. 用户名
     */
    public String getUsername() {
        return (String) get(2);
    }

    /**
     * Setter for <code>echo.user.password</code>. 密码
     */
    public void setPassword(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>echo.user.password</code>. 密码
     */
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>echo.user.email</code>. 邮箱
     */
    public void setEmail(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>echo.user.email</code>. 邮箱
     */
    public String getEmail() {
        return (String) get(4);
    }

    /**
     * Setter for <code>echo.user.avatar_url</code>. 头像地址
     */
    public void setAvatarUrl(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>echo.user.avatar_url</code>. 头像地址
     */
    public String getAvatarUrl() {
        return (String) get(5);
    }

    /**
     * Setter for <code>echo.user.signature</code>. 签名
     */
    public void setSignature(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>echo.user.signature</code>. 签名
     */
    public String getSignature() {
        return (String) get(6);
    }

    /**
     * Setter for <code>echo.user.introduction</code>. 简介
     */
    public void setIntroduction(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>echo.user.introduction</code>. 简介
     */
    public String getIntroduction() {
        return (String) get(7);
    }

    /**
     * Setter for <code>echo.user.gender</code>. 0：未知，1：男，2：女
     */
    public void setGender(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>echo.user.gender</code>. 0：未知，1：男，2：女
     */
    public Byte getGender() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>echo.user.status</code>. 0：可用，1：禁用
     */
    public void setStatus(Byte value) {
        set(9, value);
    }

    /**
     * Getter for <code>echo.user.status</code>. 0：可用，1：禁用
     */
    public Byte getStatus() {
        return (Byte) get(9);
    }

    /**
     * Setter for <code>echo.user.active</code>. 0：未删除，1：已删除
     */
    public void setActive(Byte value) {
        set(10, value);
    }

    /**
     * Getter for <code>echo.user.active</code>. 0：未删除，1：已删除
     */
    public Byte getActive() {
        return (Byte) get(10);
    }

    /**
     * Setter for <code>echo.user.create_time</code>. 创建日期
     */
    public void setCreateTime(Timestamp value) {
        set(11, value);
    }

    /**
     * Getter for <code>echo.user.create_time</code>. 创建日期
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(11);
    }

    /**
     * Setter for <code>echo.user.update_time</code>. 修改日期
     */
    public void setUpdateTime(Timestamp value) {
        set(12, value);
    }

    /**
     * Getter for <code>echo.user.update_time</code>. 修改日期
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) get(12);
    }

    /**
     * Setter for <code>echo.user.last_login_time</code>. 最后登陆日期
     */
    public void setLastLoginTime(Timestamp value) {
        set(13, value);
    }

    /**
     * Getter for <code>echo.user.last_login_time</code>. 最后登陆日期
     */
    public Timestamp getLastLoginTime() {
        return (Timestamp) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<Integer, String, String, String, String, String, String, String, Byte, Byte, Byte, Timestamp, Timestamp, Timestamp> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<Integer, String, String, String, String, String, String, String, Byte, Byte, Byte, Timestamp, Timestamp, Timestamp> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.MOBILE;
    }

    @Override
    public Field<String> field3() {
        return User.USER.USERNAME;
    }

    @Override
    public Field<String> field4() {
        return User.USER.PASSWORD;
    }

    @Override
    public Field<String> field5() {
        return User.USER.EMAIL;
    }

    @Override
    public Field<String> field6() {
        return User.USER.AVATAR_URL;
    }

    @Override
    public Field<String> field7() {
        return User.USER.SIGNATURE;
    }

    @Override
    public Field<String> field8() {
        return User.USER.INTRODUCTION;
    }

    @Override
    public Field<Byte> field9() {
        return User.USER.GENDER;
    }

    @Override
    public Field<Byte> field10() {
        return User.USER.STATUS;
    }

    @Override
    public Field<Byte> field11() {
        return User.USER.ACTIVE;
    }

    @Override
    public Field<Timestamp> field12() {
        return User.USER.CREATE_TIME;
    }

    @Override
    public Field<Timestamp> field13() {
        return User.USER.UPDATE_TIME;
    }

    @Override
    public Field<Timestamp> field14() {
        return User.USER.LAST_LOGIN_TIME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getMobile();
    }

    @Override
    public String component3() {
        return getUsername();
    }

    @Override
    public String component4() {
        return getPassword();
    }

    @Override
    public String component5() {
        return getEmail();
    }

    @Override
    public String component6() {
        return getAvatarUrl();
    }

    @Override
    public String component7() {
        return getSignature();
    }

    @Override
    public String component8() {
        return getIntroduction();
    }

    @Override
    public Byte component9() {
        return getGender();
    }

    @Override
    public Byte component10() {
        return getStatus();
    }

    @Override
    public Byte component11() {
        return getActive();
    }

    @Override
    public Timestamp component12() {
        return getCreateTime();
    }

    @Override
    public Timestamp component13() {
        return getUpdateTime();
    }

    @Override
    public Timestamp component14() {
        return getLastLoginTime();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getMobile();
    }

    @Override
    public String value3() {
        return getUsername();
    }

    @Override
    public String value4() {
        return getPassword();
    }

    @Override
    public String value5() {
        return getEmail();
    }

    @Override
    public String value6() {
        return getAvatarUrl();
    }

    @Override
    public String value7() {
        return getSignature();
    }

    @Override
    public String value8() {
        return getIntroduction();
    }

    @Override
    public Byte value9() {
        return getGender();
    }

    @Override
    public Byte value10() {
        return getStatus();
    }

    @Override
    public Byte value11() {
        return getActive();
    }

    @Override
    public Timestamp value12() {
        return getCreateTime();
    }

    @Override
    public Timestamp value13() {
        return getUpdateTime();
    }

    @Override
    public Timestamp value14() {
        return getLastLoginTime();
    }

    @Override
    public UserRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setMobile(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserRecord value5(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserRecord value6(String value) {
        setAvatarUrl(value);
        return this;
    }

    @Override
    public UserRecord value7(String value) {
        setSignature(value);
        return this;
    }

    @Override
    public UserRecord value8(String value) {
        setIntroduction(value);
        return this;
    }

    @Override
    public UserRecord value9(Byte value) {
        setGender(value);
        return this;
    }

    @Override
    public UserRecord value10(Byte value) {
        setStatus(value);
        return this;
    }

    @Override
    public UserRecord value11(Byte value) {
        setActive(value);
        return this;
    }

    @Override
    public UserRecord value12(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public UserRecord value13(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public UserRecord value14(Timestamp value) {
        setLastLoginTime(value);
        return this;
    }

    @Override
    public UserRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, Byte value9, Byte value10, Byte value11, Timestamp value12, Timestamp value13, Timestamp value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Integer id, String mobile, String username, String password, String email, String avatarUrl, String signature, String introduction, Byte gender, Byte status, Byte active, Timestamp createTime, Timestamp updateTime, Timestamp lastLoginTime) {
        super(User.USER);

        set(0, id);
        set(1, mobile);
        set(2, username);
        set(3, password);
        set(4, email);
        set(5, avatarUrl);
        set(6, signature);
        set(7, introduction);
        set(8, gender);
        set(9, status);
        set(10, active);
        set(11, createTime);
        set(12, updateTime);
        set(13, lastLoginTime);
    }
}
