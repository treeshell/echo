/*
 * This file is generated by jOOQ.
 */
package cn.treeshell.echo.model.entity.tables.records;


import cn.treeshell.echo.model.entity.tables.Notice;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 通知表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NoticeRecord extends UpdatableRecordImpl<NoticeRecord> implements Record8<Integer, Integer, Integer, Integer, Byte, Byte, Timestamp, Timestamp> {

    private static final long serialVersionUID = -73082854;

    /**
     * Setter for <code>echo.notice.id</code>. id
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>echo.notice.id</code>. id
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>echo.notice.operation_id</code>. 操作类型id：文章收藏、文章评论、评论收藏、评论回复、悄悄话回复
     */
    public void setOperationId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>echo.notice.operation_id</code>. 操作类型id：文章收藏、文章评论、评论收藏、评论回复、悄悄话回复
     */
    public Integer getOperationId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>echo.notice.type</code>. 1：文章收藏通知，2：文章评论通知，11：评论收藏通知，12：评论回复通知；21：悄悄话回复通知
     */
    public void setType(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>echo.notice.type</code>. 1：文章收藏通知，2：文章评论通知，11：评论收藏通知，12：评论回复通知；21：悄悄话回复通知
     */
    public Integer getType() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>echo.notice.user_id</code>. 接收通知的用户id
     */
    public void setUserId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>echo.notice.user_id</code>. 接收通知的用户id
     */
    public Integer getUserId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>echo.notice.is_read</code>. 0：未读，1：已读
     */
    public void setIsRead(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>echo.notice.is_read</code>. 0：未读，1：已读
     */
    public Byte getIsRead() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>echo.notice.active</code>. 0：未删除，1：已删除
     */
    public void setActive(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>echo.notice.active</code>. 0：未删除，1：已删除
     */
    public Byte getActive() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>echo.notice.create_time</code>. 创建日期
     */
    public void setCreateTime(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>echo.notice.create_time</code>. 创建日期
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>echo.notice.update_time</code>. 修改日期
     */
    public void setUpdateTime(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>echo.notice.update_time</code>. 修改日期
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, Integer, Integer, Byte, Byte, Timestamp, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, Integer, Integer, Integer, Byte, Byte, Timestamp, Timestamp> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Notice.NOTICE.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Notice.NOTICE.OPERATION_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Notice.NOTICE.TYPE;
    }

    @Override
    public Field<Integer> field4() {
        return Notice.NOTICE.USER_ID;
    }

    @Override
    public Field<Byte> field5() {
        return Notice.NOTICE.IS_READ;
    }

    @Override
    public Field<Byte> field6() {
        return Notice.NOTICE.ACTIVE;
    }

    @Override
    public Field<Timestamp> field7() {
        return Notice.NOTICE.CREATE_TIME;
    }

    @Override
    public Field<Timestamp> field8() {
        return Notice.NOTICE.UPDATE_TIME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getOperationId();
    }

    @Override
    public Integer component3() {
        return getType();
    }

    @Override
    public Integer component4() {
        return getUserId();
    }

    @Override
    public Byte component5() {
        return getIsRead();
    }

    @Override
    public Byte component6() {
        return getActive();
    }

    @Override
    public Timestamp component7() {
        return getCreateTime();
    }

    @Override
    public Timestamp component8() {
        return getUpdateTime();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getOperationId();
    }

    @Override
    public Integer value3() {
        return getType();
    }

    @Override
    public Integer value4() {
        return getUserId();
    }

    @Override
    public Byte value5() {
        return getIsRead();
    }

    @Override
    public Byte value6() {
        return getActive();
    }

    @Override
    public Timestamp value7() {
        return getCreateTime();
    }

    @Override
    public Timestamp value8() {
        return getUpdateTime();
    }

    @Override
    public NoticeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public NoticeRecord value2(Integer value) {
        setOperationId(value);
        return this;
    }

    @Override
    public NoticeRecord value3(Integer value) {
        setType(value);
        return this;
    }

    @Override
    public NoticeRecord value4(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public NoticeRecord value5(Byte value) {
        setIsRead(value);
        return this;
    }

    @Override
    public NoticeRecord value6(Byte value) {
        setActive(value);
        return this;
    }

    @Override
    public NoticeRecord value7(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public NoticeRecord value8(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public NoticeRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Byte value5, Byte value6, Timestamp value7, Timestamp value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NoticeRecord
     */
    public NoticeRecord() {
        super(Notice.NOTICE);
    }

    /**
     * Create a detached, initialised NoticeRecord
     */
    public NoticeRecord(Integer id, Integer operationId, Integer type, Integer userId, Byte isRead, Byte active, Timestamp createTime, Timestamp updateTime) {
        super(Notice.NOTICE);

        set(0, id);
        set(1, operationId);
        set(2, type);
        set(3, userId);
        set(4, isRead);
        set(5, active);
        set(6, createTime);
        set(7, updateTime);
    }
}
